class MovieRentingSystem:

    def __init__(self, n: int, entries: List[List[int]]):
        self.price_map={}
        self.unrented=defaultdict(SortedList)
        self.rented=SortedList()
        for shop,movie,price in entries:
            self.price_map[(shop,movie)]=price
            self.unrented[movie].add((price,shop))
    def search(self, movie: int) -> List[int]:
        sl=self.unrented.get(movie,None)
        if not sl:
            return []
        result=[]
        for i in range(min(5,len(sl))):
            _,shop=sl[i]
            result.append(shop)
        return result
    def rent(self, shop: int, movie: int) -> None:
        price=self.price_map[(shop,movie)]
        self.unrented[movie].remove((price,shop))
        self.rented.add((price,shop,movie))
    def drop(self, shop: int, movie: int) -> None:
        price=self.price_map[(shop,movie)]
        self.rented.remove((price,shop,movie))
        self.unrented[movie].add((price,shop))
    def report(self) -> List[List[int]]:
        result=[]
        for i in range(min(5,len(self.rented))):
            price,shop,movie=self.rented[i]
            result.append([shop,movie])
        return result
        
